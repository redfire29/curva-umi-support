import{s as T,v as m,r as O,x as q,y as M,z as j,A as V,f as $,B as R,C as x,q as z,l as F,D as H,E as K,G as S,H as U,I as L,J as h,K as N,c as G,a as I,o as J}from"./BGd_g3Li.js";const Y=t=>t==="defer"||t===!1;function Q(...t){var w;const r=typeof t[t.length-1]=="string"?t.pop():void 0;typeof t[0]!="string"&&t.unshift(r);let[s,i,a={}]=t;if(typeof s!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof i!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");const e=T(),u=i,_=()=>m.value,C=()=>e.isHydrating?e.payload.data[s]:e.static.data[s];a.server=a.server??!0,a.default=a.default??_,a.getCachedData=a.getCachedData??C,a.lazy=a.lazy??!1,a.immediate=a.immediate??!0,a.deep=a.deep??m.deep,a.dedupe=a.dedupe??"cancel";const y=a.getCachedData(s,e),D=y!=null;if(!e._asyncData[s]||!a.immediate){(w=e.payload._errors)[s]??(w[s]=m.errorValue);const c=a.deep?O:q;e._asyncData[s]={data:c(D?y:a.default()),pending:O(!D),error:M(e.payload._errors,s),status:O("idle"),_default:a.default}}const n={...e._asyncData[s]};delete n._default,n.refresh=n.execute=(c={})=>{if(e._asyncDataPromises[s]){if(Y(c.dedupe??a.dedupe))return e._asyncDataPromises[s];e._asyncDataPromises[s].cancelled=!0}if(c._initial||e.isHydrating&&c._initial!==!1){const l=c._initial?y:a.getCachedData(s,e);if(l!=null)return Promise.resolve(l)}n.pending.value=!0,n.status.value="pending";const f=new Promise((l,o)=>{try{l(u(e))}catch(p){o(p)}}).then(async l=>{if(f.cancelled)return e._asyncDataPromises[s];let o=l;a.transform&&(o=await a.transform(l)),a.pick&&(o=X(o,a.pick)),e.payload.data[s]=o,n.data.value=o,n.error.value=m.errorValue,n.status.value="success"}).catch(l=>{if(f.cancelled)return e._asyncDataPromises[s];n.error.value=x(l),n.data.value=z(a.default()),n.status.value="error"}).finally(()=>{f.cancelled||(n.pending.value=!1,delete e._asyncDataPromises[s])});return e._asyncDataPromises[s]=f,e._asyncDataPromises[s]},n.clear=()=>W(e,s);const g=()=>n.refresh({_initial:!0}),v=a.server!==!1&&e.payload.serverRendered;{const c=F();if(c&&!c._nuxtOnBeforeMountCbs){c._nuxtOnBeforeMountCbs=[];const o=c._nuxtOnBeforeMountCbs;j(()=>{o.forEach(p=>{p()}),o.splice(0,o.length)}),V(()=>o.splice(0,o.length))}v&&e.isHydrating&&(n.error.value||y!=null)?(n.pending.value=!1,n.status.value=n.error.value?"error":"success"):c&&(e.payload.serverRendered&&e.isHydrating||a.lazy)&&a.immediate?c._nuxtOnBeforeMountCbs.push(g):a.immediate&&g();const f=H();if(a.watch){const o=$(a.watch,()=>n.refresh());f&&R(o)}const l=e.hook("app:data:refresh",async o=>{(!o||o.includes(s))&&await n.refresh()});f&&R(l)}const b=Promise.resolve(e._asyncDataPromises[s]).then(()=>n);return Object.assign(b,n),b}function W(t,r){r in t.payload.data&&(t.payload.data[r]=void 0),r in t.payload._errors&&(t.payload._errors[r]=m.errorValue),t._asyncData[r]&&(t._asyncData[r].data.value=t._asyncData[r]._default(),t._asyncData[r].error.value=m.errorValue,t._asyncData[r].pending.value=!1,t._asyncData[r].status.value="idle"),r in t._asyncDataPromises&&(t._asyncDataPromises[r]&&(t._asyncDataPromises[r].cancelled=!0),t._asyncDataPromises[r]=void 0)}function X(t,r){const s={};for(const i of r)s[i]=t[i];return s}function Z(t,r,s){const[i={},a]=[{},r],e=K(()=>h(t)),u=i.key||S([a,typeof e.value=="string"?e.value:"",...k(i)]);if(!u||typeof u!="string")throw new TypeError("[nuxt] [useFetch] key must be a string: "+u);const _=u===a?"$f"+u:u;if(!i.baseURL&&typeof e.value=="string"&&e.value[0]==="/"&&e.value[1]==="/")throw new Error('[nuxt] [useFetch] the request URL must not start with "//".');const{server:C,lazy:y,default:D,transform:n,pick:g,watch:v,immediate:b,getCachedData:w,deep:c,dedupe:f,...l}=i,o=U({...L,...l,cache:typeof i.cache=="boolean"?void 0:i.cache}),p={server:C,lazy:y,default:D,transform:n,pick:g,immediate:b,getCachedData:w,deep:c,dedupe:f,watch:v===!1?[]:[o,e,...v||[]]};let d;return Q(_,()=>{var B;(B=d==null?void 0:d.abort)==null||B.call(d,new DOMException("Request aborted as another request to the same endpoint was initiated.","AbortError")),d=typeof AbortController<"u"?new AbortController:{};const E=h(i.timeout);let P;return E&&(P=setTimeout(()=>d.abort(new DOMException("Request aborted due to timeout.","AbortError")),E),d.signal.onabort=()=>clearTimeout(P)),(i.$fetch||globalThis.$fetch)(e.value,{signal:d.signal,...o}).finally(()=>{clearTimeout(P)})},p)}function k(t){var s;const r=[((s=h(t.method))==null?void 0:s.toUpperCase())||"GET",h(t.baseURL)];for(const i of[t.params||t.query]){const a=h(i);if(!a)continue;const e={};for(const[u,_]of Object.entries(a))e[h(u)]=h(_);r.push(e)}return r}const te={__name:"songlist",async setup(t){let r,s;const{data:i}=([r,s]=N(()=>Z("https://github.com/redfire29/neru_songlist/blob/main/src/plugins/array.js?raw=true","$0dG5K9NY8p")),r=await r,s(),r);return console.log(i,"data"),(a,e)=>(J(),G("div",null,e[0]||(e[0]=[I("p",null,"song list",-1)])))}};export{te as default};
